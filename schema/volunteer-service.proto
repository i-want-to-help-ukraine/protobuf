syntax = "proto3";

package VolunteerServicePackage;

service VolunteerServiceRPC {
  rpc search(SearchVolunteersRequest) returns (VolunteersResponse) {}

  rpc getVolunteersByIds(GetByIdsRequest) returns (VolunteersResponse) {}

  rpc addPaymentOption(AddPaymentOptionRequest) returns (VolunteerResponse) {}

  rpc updatePaymentOption(UpdatePaymentOptionRequest) returns (VolunteerResponse) {}

  rpc deletePaymentOption(DeletePaymentOptionRequest) returns (VolunteerResponse) {}

  rpc getActivitiesByIds(GetActivitiesByIdsRequest) returns (VolunteerResponse) {}

  rpc getPaymentOptionsByIds(GetByIdsRequest) returns (VolunteerResponse) {}
}

message GetByIdsRequest {
  repeated string ids = 1;
}

message SearchVolunteersRequest {
  string city = 1;
  repeated string activityType = 2;
  repeated string PaymentOptions = 3;
}

message VolunteerDto {
  string id = 1;
  string name = 2;
  repeated string activityIds = 3;
  repeated string paymentOptionIds = 4;
}

message VolunteersResponse {
  repeated VolunteerDto volunteers = 1;
}

message VolunteerResponse {
  VolunteerDto volunteer = 1;
}

message VolunteerActivity {
  string id = 1;
  string title = 2;
}

message GetActivitiesByIdsRequest {
  repeated string ids = 1;
}

message PaymentOption {
  string id = 1;
  PaymentOptionType type = 2;
  repeated PaymentOptionValue values = 3;
}

enum PaymentOptionType {
  bankCard = 0;
  bitcoin = 1;
  westernUnion = 2;
}

message PaymentOptionValue {
  string id = 1;
  string key = 2;
  string value = 3;
}

message AddPaymentOptionRequest {
  PaymentOptionType type = 1;
  repeated PaymentOptionValue values = 2;
  string volunteerId = 3;
}

message UpdatePaymentOptionRequest {
  string id = 1;
  PaymentOptionType type = 2;
  repeated PaymentOptionValue values = 3;
  string volunteerId = 4;
}

message DeletePaymentOptionRequest {
  string id = 1;
}

enum VerificationState {
  requested = 0;
  inProgress = 1;
  verified = 2;
  rejected = 3;
}

enum SocialProvider {
  instagram = 0;
  google = 1;
}
